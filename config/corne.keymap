/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q           &kp W       &kp E        &kp R            &kp T        &kp Y      &kp U         &kp I        &kp O       &kp P     &kp BSPC
&kp LCTRL  &hm LEFT_GUI A  &hm LALT S  &hm LCTRL D  &hm LSHFT F      &kp G        &kp H      &hm RSHFT J   &hm RCTRL K  &hm RALT L  &kp SEMI  &kp ENTER
&kp LSHFT  &kp Z           &kp X       &kp C        &kp V            &kp B        &kp N      &kp M         &kp COMMA    &kp DOT     &kp FSLH  &kp APOS
                                       &kp LGUI     &lt 1 BACKSPACE  &kp SPACE    &kp SPACE  &lt 2 DELETE  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL      &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET         &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &kp NUMBER_1  &kp N2  &kp N3    &kp N4    &kp N5       &kp LESS_THAN     &kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC  &kp BACKSLASH
&kp LSHFT  &kp N6        &kp N7  &kp N8    &kp N9    &kp N0       &kp GREATER_THAN  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp TILDE
                                 &kp LGUI  &trans    &kp SPACE    &kp RET           &trans     &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &kp N1  &kp N2  &kp N3    &kp N4  &kp N5       &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&trans   &trans  &trans  &trans    &trans  &trans       &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &trans
&trans   &trans  &trans  &trans    &trans  &trans       &trans    &trans    &trans    &trans     &trans  &trans
                         &kp LGUI  &trans  &kp SPACE    &kp RET   &trans    &kp RALT
            >;
        };

        System {
            bindings = <
&trans          &trans        &trans        &trans        &trans        &to 4           &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                            &trans        &trans        &trans          &trans  &trans  &trans
            >;

            label = "system";
        };

        game_layer {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E         &kp R   &kp T        &kp Y      &kp U   &kp I      &kp O    &kp P     &kp BSPC
&kp TAB    &kp A  &kp S  &kp D         &kp F   &kp G        &kp H      &kp J   &kp K      &kp L    &kp SEMI  &trans
&kp LSHFT  &kp Z  &kp X  &kp C         &kp V   &kp B        &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH  &to 0
                         &kp LEFT_ALT  &trans  &kp SPACE    &kp SPACE  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        system_layer_con {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
